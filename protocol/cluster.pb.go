// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: protocol/cluster.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_ErrorCodeSuccess ErrorCode = 0
	ErrorCode_ErrorCodeNormal  ErrorCode = 1
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ErrorCodeSuccess",
		1: "ErrorCodeNormal",
	}
	ErrorCode_value = map[string]int32{
		"ErrorCodeSuccess": 0,
		"ErrorCodeNormal":  1,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_cluster_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_protocol_cluster_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{0}
}

type PkgType int32

const (
	PkgType_PkgTypeNone                  PkgType = 0
	PkgType_PkgTypeEnvelopeSend          PkgType = 1
	PkgType_PkgTypeEnvelopeBatchSend     PkgType = 2
	PkgType_PkgTypeEnvelopeRequestAsync  PkgType = 3
	PkgType_PkgTypeEnvelopeResponseAsync PkgType = 4
	PkgType_PkgTypeEnvelopeRequest       PkgType = 5
	PkgType_PkgTypeEnvelopeResponse      PkgType = 6
	PkgType_PkgTypeEnvelopeWatch         PkgType = 7
	PkgType_PkgTypeEnvelopeNotify        PkgType = 8
	PkgType_PkgTypeEnvelopeFireNotify    PkgType = 9
	PkgType_PkgTypeRegisterSystemReq     PkgType = 10
	PkgType_PkgTypeRegisterSystemRsp     PkgType = 11
)

// Enum value maps for PkgType.
var (
	PkgType_name = map[int32]string{
		0:  "PkgTypeNone",
		1:  "PkgTypeEnvelopeSend",
		2:  "PkgTypeEnvelopeBatchSend",
		3:  "PkgTypeEnvelopeRequestAsync",
		4:  "PkgTypeEnvelopeResponseAsync",
		5:  "PkgTypeEnvelopeRequest",
		6:  "PkgTypeEnvelopeResponse",
		7:  "PkgTypeEnvelopeWatch",
		8:  "PkgTypeEnvelopeNotify",
		9:  "PkgTypeEnvelopeFireNotify",
		10: "PkgTypeRegisterSystemReq",
		11: "PkgTypeRegisterSystemRsp",
	}
	PkgType_value = map[string]int32{
		"PkgTypeNone":                  0,
		"PkgTypeEnvelopeSend":          1,
		"PkgTypeEnvelopeBatchSend":     2,
		"PkgTypeEnvelopeRequestAsync":  3,
		"PkgTypeEnvelopeResponseAsync": 4,
		"PkgTypeEnvelopeRequest":       5,
		"PkgTypeEnvelopeResponse":      6,
		"PkgTypeEnvelopeWatch":         7,
		"PkgTypeEnvelopeNotify":        8,
		"PkgTypeEnvelopeFireNotify":    9,
		"PkgTypeRegisterSystemReq":     10,
		"PkgTypeRegisterSystemRsp":     11,
	}
)

func (x PkgType) Enum() *PkgType {
	p := new(PkgType)
	*p = x
	return p
}

func (x PkgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PkgType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_cluster_proto_enumTypes[1].Descriptor()
}

func (PkgType) Type() protoreflect.EnumType {
	return &file_protocol_cluster_proto_enumTypes[1]
}

func (x PkgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PkgType.Descriptor instead.
func (PkgType) EnumDescriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{1}
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          uint32                 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_protocol_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Message) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActorRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemId      uint32                 `protobuf:"varint,1,opt,name=SystemId,proto3" json:"SystemId,omitempty"`
	GroupSlot     uint32                 `protobuf:"varint,2,opt,name=GroupSlot,proto3" json:"GroupSlot,omitempty"`
	ActorType     uint32                 `protobuf:"varint,3,opt,name=ActorType,proto3" json:"ActorType,omitempty"`
	ActorId       string                 `protobuf:"bytes,4,opt,name=ActorId,proto3" json:"ActorId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActorRef) Reset() {
	*x = ActorRef{}
	mi := &file_protocol_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActorRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorRef) ProtoMessage() {}

func (x *ActorRef) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorRef.ProtoReflect.Descriptor instead.
func (*ActorRef) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ActorRef) GetSystemId() uint32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *ActorRef) GetGroupSlot() uint32 {
	if x != nil {
		return x.GroupSlot
	}
	return 0
}

func (x *ActorRef) GetActorType() uint32 {
	if x != nil {
		return x.ActorType
	}
	return 0
}

func (x *ActorRef) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

type PkgEnvelopeSend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef  *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRef    *ActorRef              `protobuf:"bytes,2,opt,name=ToActorRef,proto3" json:"ToActorRef,omitempty"`
	Message       *Message               `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgEnvelopeSend) Reset() {
	*x = PkgEnvelopeSend{}
	mi := &file_protocol_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeSend) ProtoMessage() {}

func (x *PkgEnvelopeSend) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeSend.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeSend) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *PkgEnvelopeSend) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeSend) GetToActorRef() *ActorRef {
	if x != nil {
		return x.ToActorRef
	}
	return nil
}

func (x *PkgEnvelopeSend) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type PkgEnvelopeBatchSend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef  *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRefs   []*ActorRef            `protobuf:"bytes,2,rep,name=ToActorRefs,proto3" json:"ToActorRefs,omitempty"`
	Messages      []*Message             `protobuf:"bytes,3,rep,name=Messages,proto3" json:"Messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgEnvelopeBatchSend) Reset() {
	*x = PkgEnvelopeBatchSend{}
	mi := &file_protocol_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeBatchSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeBatchSend) ProtoMessage() {}

func (x *PkgEnvelopeBatchSend) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeBatchSend.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeBatchSend) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *PkgEnvelopeBatchSend) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeBatchSend) GetToActorRefs() []*ActorRef {
	if x != nil {
		return x.ToActorRefs
	}
	return nil
}

func (x *PkgEnvelopeBatchSend) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type PkgEnvelopeRequestAsync struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef    *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRef      *ActorRef              `protobuf:"bytes,2,opt,name=ToActorRef,proto3" json:"ToActorRef,omitempty"`
	Message         *Message               `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	CallbackId      uint32                 `protobuf:"varint,4,opt,name=CallbackId,proto3" json:"CallbackId,omitempty"`
	CallbackAddress uint64                 `protobuf:"varint,5,opt,name=CallbackAddress,proto3" json:"CallbackAddress,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PkgEnvelopeRequestAsync) Reset() {
	*x = PkgEnvelopeRequestAsync{}
	mi := &file_protocol_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeRequestAsync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeRequestAsync) ProtoMessage() {}

func (x *PkgEnvelopeRequestAsync) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeRequestAsync.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeRequestAsync) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *PkgEnvelopeRequestAsync) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeRequestAsync) GetToActorRef() *ActorRef {
	if x != nil {
		return x.ToActorRef
	}
	return nil
}

func (x *PkgEnvelopeRequestAsync) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PkgEnvelopeRequestAsync) GetCallbackId() uint32 {
	if x != nil {
		return x.CallbackId
	}
	return 0
}

func (x *PkgEnvelopeRequestAsync) GetCallbackAddress() uint64 {
	if x != nil {
		return x.CallbackAddress
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     ErrorCode              `protobuf:"varint,1,opt,name=ErrorCode,proto3,enum=protocol.ErrorCode" json:"ErrorCode,omitempty"`
	Message       *Message               `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_protocol_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ErrorCodeSuccess
}

func (x *Response) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type PkgEnvelopeResponseAsync struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef    *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRef      *ActorRef              `protobuf:"bytes,2,opt,name=ToActorRef,proto3" json:"ToActorRef,omitempty"`
	Response        *Response              `protobuf:"bytes,3,opt,name=Response,proto3" json:"Response,omitempty"`
	CallbackId      uint32                 `protobuf:"varint,4,opt,name=CallbackId,proto3" json:"CallbackId,omitempty"`
	CallbackAddress uint64                 `protobuf:"varint,5,opt,name=CallbackAddress,proto3" json:"CallbackAddress,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PkgEnvelopeResponseAsync) Reset() {
	*x = PkgEnvelopeResponseAsync{}
	mi := &file_protocol_cluster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeResponseAsync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeResponseAsync) ProtoMessage() {}

func (x *PkgEnvelopeResponseAsync) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeResponseAsync.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeResponseAsync) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *PkgEnvelopeResponseAsync) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeResponseAsync) GetToActorRef() *ActorRef {
	if x != nil {
		return x.ToActorRef
	}
	return nil
}

func (x *PkgEnvelopeResponseAsync) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *PkgEnvelopeResponseAsync) GetCallbackId() uint32 {
	if x != nil {
		return x.CallbackId
	}
	return 0
}

func (x *PkgEnvelopeResponseAsync) GetCallbackAddress() uint64 {
	if x != nil {
		return x.CallbackAddress
	}
	return 0
}

type PkgEnvelopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef  *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRef    *ActorRef              `protobuf:"bytes,2,opt,name=ToActorRef,proto3" json:"ToActorRef,omitempty"`
	Message       *Message               `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgEnvelopeRequest) Reset() {
	*x = PkgEnvelopeRequest{}
	mi := &file_protocol_cluster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeRequest) ProtoMessage() {}

func (x *PkgEnvelopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeRequest.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeRequest) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *PkgEnvelopeRequest) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeRequest) GetToActorRef() *ActorRef {
	if x != nil {
		return x.ToActorRef
	}
	return nil
}

func (x *PkgEnvelopeRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type PkgEnvelopeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef  *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRef    *ActorRef              `protobuf:"bytes,2,opt,name=ToActorRef,proto3" json:"ToActorRef,omitempty"`
	Response      *Response              `protobuf:"bytes,3,opt,name=Response,proto3" json:"Response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgEnvelopeResponse) Reset() {
	*x = PkgEnvelopeResponse{}
	mi := &file_protocol_cluster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeResponse) ProtoMessage() {}

func (x *PkgEnvelopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeResponse.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeResponse) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *PkgEnvelopeResponse) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeResponse) GetToActorRef() *ActorRef {
	if x != nil {
		return x.ToActorRef
	}
	return nil
}

func (x *PkgEnvelopeResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type PkgEnvelopeWatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef  *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRef    *ActorRef              `protobuf:"bytes,2,opt,name=ToActorRef,proto3" json:"ToActorRef,omitempty"`
	WatchType     uint32                 `protobuf:"varint,3,opt,name=WatchType,proto3" json:"WatchType,omitempty"`
	IsWatch       bool                   `protobuf:"varint,4,opt,name=IsWatch,proto3" json:"IsWatch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgEnvelopeWatch) Reset() {
	*x = PkgEnvelopeWatch{}
	mi := &file_protocol_cluster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeWatch) ProtoMessage() {}

func (x *PkgEnvelopeWatch) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeWatch.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeWatch) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *PkgEnvelopeWatch) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeWatch) GetToActorRef() *ActorRef {
	if x != nil {
		return x.ToActorRef
	}
	return nil
}

func (x *PkgEnvelopeWatch) GetWatchType() uint32 {
	if x != nil {
		return x.WatchType
	}
	return 0
}

func (x *PkgEnvelopeWatch) GetIsWatch() bool {
	if x != nil {
		return x.IsWatch
	}
	return false
}

type PkgEnvelopeNotify struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef  *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRefs   []*ActorRef            `protobuf:"bytes,2,rep,name=ToActorRefs,proto3" json:"ToActorRefs,omitempty"`
	NotifyType    uint32                 `protobuf:"varint,3,opt,name=NotifyType,proto3" json:"NotifyType,omitempty"`
	ActorRef      *ActorRef              `protobuf:"bytes,4,opt,name=ActorRef,proto3" json:"ActorRef,omitempty"`
	WatchType     uint32                 `protobuf:"varint,5,opt,name=WatchType,proto3" json:"WatchType,omitempty"`
	Message       *Message               `protobuf:"bytes,6,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgEnvelopeNotify) Reset() {
	*x = PkgEnvelopeNotify{}
	mi := &file_protocol_cluster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeNotify) ProtoMessage() {}

func (x *PkgEnvelopeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeNotify.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeNotify) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *PkgEnvelopeNotify) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeNotify) GetToActorRefs() []*ActorRef {
	if x != nil {
		return x.ToActorRefs
	}
	return nil
}

func (x *PkgEnvelopeNotify) GetNotifyType() uint32 {
	if x != nil {
		return x.NotifyType
	}
	return 0
}

func (x *PkgEnvelopeNotify) GetActorRef() *ActorRef {
	if x != nil {
		return x.ActorRef
	}
	return nil
}

func (x *PkgEnvelopeNotify) GetWatchType() uint32 {
	if x != nil {
		return x.WatchType
	}
	return 0
}

func (x *PkgEnvelopeNotify) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type PkgEnvelopeFireNotify struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromActorRef  *ActorRef              `protobuf:"bytes,1,opt,name=FromActorRef,proto3" json:"FromActorRef,omitempty"`
	ToActorRef    *ActorRef              `protobuf:"bytes,2,opt,name=ToActorRef,proto3" json:"ToActorRef,omitempty"`
	NotifyType    uint32                 `protobuf:"varint,3,opt,name=NotifyType,proto3" json:"NotifyType,omitempty"`
	WatchType     uint32                 `protobuf:"varint,4,opt,name=WatchType,proto3" json:"WatchType,omitempty"`
	Message       *Message               `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgEnvelopeFireNotify) Reset() {
	*x = PkgEnvelopeFireNotify{}
	mi := &file_protocol_cluster_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgEnvelopeFireNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgEnvelopeFireNotify) ProtoMessage() {}

func (x *PkgEnvelopeFireNotify) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgEnvelopeFireNotify.ProtoReflect.Descriptor instead.
func (*PkgEnvelopeFireNotify) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *PkgEnvelopeFireNotify) GetFromActorRef() *ActorRef {
	if x != nil {
		return x.FromActorRef
	}
	return nil
}

func (x *PkgEnvelopeFireNotify) GetToActorRef() *ActorRef {
	if x != nil {
		return x.ToActorRef
	}
	return nil
}

func (x *PkgEnvelopeFireNotify) GetNotifyType() uint32 {
	if x != nil {
		return x.NotifyType
	}
	return 0
}

func (x *PkgEnvelopeFireNotify) GetWatchType() uint32 {
	if x != nil {
		return x.WatchType
	}
	return 0
}

func (x *PkgEnvelopeFireNotify) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type PkgRegisterSystemReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemId      uint32                 `protobuf:"varint,1,opt,name=SystemId,proto3" json:"SystemId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgRegisterSystemReq) Reset() {
	*x = PkgRegisterSystemReq{}
	mi := &file_protocol_cluster_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgRegisterSystemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgRegisterSystemReq) ProtoMessage() {}

func (x *PkgRegisterSystemReq) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgRegisterSystemReq.ProtoReflect.Descriptor instead.
func (*PkgRegisterSystemReq) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *PkgRegisterSystemReq) GetSystemId() uint32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

type PkgRegisterSystemRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     ErrorCode              `protobuf:"varint,1,opt,name=ErrorCode,proto3,enum=protocol.ErrorCode" json:"ErrorCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkgRegisterSystemRsp) Reset() {
	*x = PkgRegisterSystemRsp{}
	mi := &file_protocol_cluster_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkgRegisterSystemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkgRegisterSystemRsp) ProtoMessage() {}

func (x *PkgRegisterSystemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_cluster_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkgRegisterSystemRsp.ProtoReflect.Descriptor instead.
func (*PkgRegisterSystemRsp) Descriptor() ([]byte, []int) {
	return file_protocol_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *PkgRegisterSystemRsp) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ErrorCodeSuccess
}

var File_protocol_cluster_proto protoreflect.FileDescriptor

const file_protocol_cluster_proto_rawDesc = "" +
	"\n" +
	"\x16protocol/cluster.proto\x12\bprotocol\"1\n" +
	"\aMessage\x12\x12\n" +
	"\x04Type\x18\x01 \x01(\rR\x04Type\x12\x12\n" +
	"\x04Data\x18\x02 \x01(\fR\x04Data\"|\n" +
	"\bActorRef\x12\x1a\n" +
	"\bSystemId\x18\x01 \x01(\rR\bSystemId\x12\x1c\n" +
	"\tGroupSlot\x18\x02 \x01(\rR\tGroupSlot\x12\x1c\n" +
	"\tActorType\x18\x03 \x01(\rR\tActorType\x12\x18\n" +
	"\aActorId\x18\x04 \x01(\tR\aActorId\"\xaa\x01\n" +
	"\x0fPkgEnvelopeSend\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x122\n" +
	"\n" +
	"ToActorRef\x18\x02 \x01(\v2\x12.protocol.ActorRefR\n" +
	"ToActorRef\x12+\n" +
	"\aMessage\x18\x03 \x01(\v2\x11.protocol.MessageR\aMessage\"\xb3\x01\n" +
	"\x14PkgEnvelopeBatchSend\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x124\n" +
	"\vToActorRefs\x18\x02 \x03(\v2\x12.protocol.ActorRefR\vToActorRefs\x12-\n" +
	"\bMessages\x18\x03 \x03(\v2\x11.protocol.MessageR\bMessages\"\xfc\x01\n" +
	"\x17PkgEnvelopeRequestAsync\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x122\n" +
	"\n" +
	"ToActorRef\x18\x02 \x01(\v2\x12.protocol.ActorRefR\n" +
	"ToActorRef\x12+\n" +
	"\aMessage\x18\x03 \x01(\v2\x11.protocol.MessageR\aMessage\x12\x1e\n" +
	"\n" +
	"CallbackId\x18\x04 \x01(\rR\n" +
	"CallbackId\x12(\n" +
	"\x0fCallbackAddress\x18\x05 \x01(\x04R\x0fCallbackAddress\"j\n" +
	"\bResponse\x121\n" +
	"\tErrorCode\x18\x01 \x01(\x0e2\x13.protocol.ErrorCodeR\tErrorCode\x12+\n" +
	"\aMessage\x18\x02 \x01(\v2\x11.protocol.MessageR\aMessage\"\x80\x02\n" +
	"\x18PkgEnvelopeResponseAsync\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x122\n" +
	"\n" +
	"ToActorRef\x18\x02 \x01(\v2\x12.protocol.ActorRefR\n" +
	"ToActorRef\x12.\n" +
	"\bResponse\x18\x03 \x01(\v2\x12.protocol.ResponseR\bResponse\x12\x1e\n" +
	"\n" +
	"CallbackId\x18\x04 \x01(\rR\n" +
	"CallbackId\x12(\n" +
	"\x0fCallbackAddress\x18\x05 \x01(\x04R\x0fCallbackAddress\"\xad\x01\n" +
	"\x12PkgEnvelopeRequest\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x122\n" +
	"\n" +
	"ToActorRef\x18\x02 \x01(\v2\x12.protocol.ActorRefR\n" +
	"ToActorRef\x12+\n" +
	"\aMessage\x18\x03 \x01(\v2\x11.protocol.MessageR\aMessage\"\xb1\x01\n" +
	"\x13PkgEnvelopeResponse\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x122\n" +
	"\n" +
	"ToActorRef\x18\x02 \x01(\v2\x12.protocol.ActorRefR\n" +
	"ToActorRef\x12.\n" +
	"\bResponse\x18\x03 \x01(\v2\x12.protocol.ResponseR\bResponse\"\xb6\x01\n" +
	"\x10PkgEnvelopeWatch\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x122\n" +
	"\n" +
	"ToActorRef\x18\x02 \x01(\v2\x12.protocol.ActorRefR\n" +
	"ToActorRef\x12\x1c\n" +
	"\tWatchType\x18\x03 \x01(\rR\tWatchType\x12\x18\n" +
	"\aIsWatch\x18\x04 \x01(\bR\aIsWatch\"\x9c\x02\n" +
	"\x11PkgEnvelopeNotify\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x124\n" +
	"\vToActorRefs\x18\x02 \x03(\v2\x12.protocol.ActorRefR\vToActorRefs\x12\x1e\n" +
	"\n" +
	"NotifyType\x18\x03 \x01(\rR\n" +
	"NotifyType\x12.\n" +
	"\bActorRef\x18\x04 \x01(\v2\x12.protocol.ActorRefR\bActorRef\x12\x1c\n" +
	"\tWatchType\x18\x05 \x01(\rR\tWatchType\x12+\n" +
	"\aMessage\x18\x06 \x01(\v2\x11.protocol.MessageR\aMessage\"\xee\x01\n" +
	"\x15PkgEnvelopeFireNotify\x126\n" +
	"\fFromActorRef\x18\x01 \x01(\v2\x12.protocol.ActorRefR\fFromActorRef\x122\n" +
	"\n" +
	"ToActorRef\x18\x02 \x01(\v2\x12.protocol.ActorRefR\n" +
	"ToActorRef\x12\x1e\n" +
	"\n" +
	"NotifyType\x18\x03 \x01(\rR\n" +
	"NotifyType\x12\x1c\n" +
	"\tWatchType\x18\x04 \x01(\rR\tWatchType\x12+\n" +
	"\aMessage\x18\x05 \x01(\v2\x11.protocol.MessageR\aMessage\"2\n" +
	"\x14PkgRegisterSystemReq\x12\x1a\n" +
	"\bSystemId\x18\x01 \x01(\rR\bSystemId\"I\n" +
	"\x14PkgRegisterSystemRsp\x121\n" +
	"\tErrorCode\x18\x01 \x01(\x0e2\x13.protocol.ErrorCodeR\tErrorCode*6\n" +
	"\tErrorCode\x12\x14\n" +
	"\x10ErrorCodeSuccess\x10\x00\x12\x13\n" +
	"\x0fErrorCodeNormal\x10\x01*\xdd\x02\n" +
	"\aPkgType\x12\x0f\n" +
	"\vPkgTypeNone\x10\x00\x12\x17\n" +
	"\x13PkgTypeEnvelopeSend\x10\x01\x12\x1c\n" +
	"\x18PkgTypeEnvelopeBatchSend\x10\x02\x12\x1f\n" +
	"\x1bPkgTypeEnvelopeRequestAsync\x10\x03\x12 \n" +
	"\x1cPkgTypeEnvelopeResponseAsync\x10\x04\x12\x1a\n" +
	"\x16PkgTypeEnvelopeRequest\x10\x05\x12\x1b\n" +
	"\x17PkgTypeEnvelopeResponse\x10\x06\x12\x18\n" +
	"\x14PkgTypeEnvelopeWatch\x10\a\x12\x19\n" +
	"\x15PkgTypeEnvelopeNotify\x10\b\x12\x1d\n" +
	"\x19PkgTypeEnvelopeFireNotify\x10\t\x12\x1c\n" +
	"\x18PkgTypeRegisterSystemReq\x10\n" +
	"\x12\x1c\n" +
	"\x18PkgTypeRegisterSystemRsp\x10\vB'Z%github.com/kofplayer/dvactor/protocolb\x06proto3"

var (
	file_protocol_cluster_proto_rawDescOnce sync.Once
	file_protocol_cluster_proto_rawDescData []byte
)

func file_protocol_cluster_proto_rawDescGZIP() []byte {
	file_protocol_cluster_proto_rawDescOnce.Do(func() {
		file_protocol_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protocol_cluster_proto_rawDesc), len(file_protocol_cluster_proto_rawDesc)))
	})
	return file_protocol_cluster_proto_rawDescData
}

var file_protocol_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protocol_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protocol_cluster_proto_goTypes = []any{
	(ErrorCode)(0),                   // 0: protocol.ErrorCode
	(PkgType)(0),                     // 1: protocol.PkgType
	(*Message)(nil),                  // 2: protocol.Message
	(*ActorRef)(nil),                 // 3: protocol.ActorRef
	(*PkgEnvelopeSend)(nil),          // 4: protocol.PkgEnvelopeSend
	(*PkgEnvelopeBatchSend)(nil),     // 5: protocol.PkgEnvelopeBatchSend
	(*PkgEnvelopeRequestAsync)(nil),  // 6: protocol.PkgEnvelopeRequestAsync
	(*Response)(nil),                 // 7: protocol.Response
	(*PkgEnvelopeResponseAsync)(nil), // 8: protocol.PkgEnvelopeResponseAsync
	(*PkgEnvelopeRequest)(nil),       // 9: protocol.PkgEnvelopeRequest
	(*PkgEnvelopeResponse)(nil),      // 10: protocol.PkgEnvelopeResponse
	(*PkgEnvelopeWatch)(nil),         // 11: protocol.PkgEnvelopeWatch
	(*PkgEnvelopeNotify)(nil),        // 12: protocol.PkgEnvelopeNotify
	(*PkgEnvelopeFireNotify)(nil),    // 13: protocol.PkgEnvelopeFireNotify
	(*PkgRegisterSystemReq)(nil),     // 14: protocol.PkgRegisterSystemReq
	(*PkgRegisterSystemRsp)(nil),     // 15: protocol.PkgRegisterSystemRsp
}
var file_protocol_cluster_proto_depIdxs = []int32{
	3,  // 0: protocol.PkgEnvelopeSend.FromActorRef:type_name -> protocol.ActorRef
	3,  // 1: protocol.PkgEnvelopeSend.ToActorRef:type_name -> protocol.ActorRef
	2,  // 2: protocol.PkgEnvelopeSend.Message:type_name -> protocol.Message
	3,  // 3: protocol.PkgEnvelopeBatchSend.FromActorRef:type_name -> protocol.ActorRef
	3,  // 4: protocol.PkgEnvelopeBatchSend.ToActorRefs:type_name -> protocol.ActorRef
	2,  // 5: protocol.PkgEnvelopeBatchSend.Messages:type_name -> protocol.Message
	3,  // 6: protocol.PkgEnvelopeRequestAsync.FromActorRef:type_name -> protocol.ActorRef
	3,  // 7: protocol.PkgEnvelopeRequestAsync.ToActorRef:type_name -> protocol.ActorRef
	2,  // 8: protocol.PkgEnvelopeRequestAsync.Message:type_name -> protocol.Message
	0,  // 9: protocol.Response.ErrorCode:type_name -> protocol.ErrorCode
	2,  // 10: protocol.Response.Message:type_name -> protocol.Message
	3,  // 11: protocol.PkgEnvelopeResponseAsync.FromActorRef:type_name -> protocol.ActorRef
	3,  // 12: protocol.PkgEnvelopeResponseAsync.ToActorRef:type_name -> protocol.ActorRef
	7,  // 13: protocol.PkgEnvelopeResponseAsync.Response:type_name -> protocol.Response
	3,  // 14: protocol.PkgEnvelopeRequest.FromActorRef:type_name -> protocol.ActorRef
	3,  // 15: protocol.PkgEnvelopeRequest.ToActorRef:type_name -> protocol.ActorRef
	2,  // 16: protocol.PkgEnvelopeRequest.Message:type_name -> protocol.Message
	3,  // 17: protocol.PkgEnvelopeResponse.FromActorRef:type_name -> protocol.ActorRef
	3,  // 18: protocol.PkgEnvelopeResponse.ToActorRef:type_name -> protocol.ActorRef
	7,  // 19: protocol.PkgEnvelopeResponse.Response:type_name -> protocol.Response
	3,  // 20: protocol.PkgEnvelopeWatch.FromActorRef:type_name -> protocol.ActorRef
	3,  // 21: protocol.PkgEnvelopeWatch.ToActorRef:type_name -> protocol.ActorRef
	3,  // 22: protocol.PkgEnvelopeNotify.FromActorRef:type_name -> protocol.ActorRef
	3,  // 23: protocol.PkgEnvelopeNotify.ToActorRefs:type_name -> protocol.ActorRef
	3,  // 24: protocol.PkgEnvelopeNotify.ActorRef:type_name -> protocol.ActorRef
	2,  // 25: protocol.PkgEnvelopeNotify.Message:type_name -> protocol.Message
	3,  // 26: protocol.PkgEnvelopeFireNotify.FromActorRef:type_name -> protocol.ActorRef
	3,  // 27: protocol.PkgEnvelopeFireNotify.ToActorRef:type_name -> protocol.ActorRef
	2,  // 28: protocol.PkgEnvelopeFireNotify.Message:type_name -> protocol.Message
	0,  // 29: protocol.PkgRegisterSystemRsp.ErrorCode:type_name -> protocol.ErrorCode
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_protocol_cluster_proto_init() }
func file_protocol_cluster_proto_init() {
	if File_protocol_cluster_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protocol_cluster_proto_rawDesc), len(file_protocol_cluster_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_cluster_proto_goTypes,
		DependencyIndexes: file_protocol_cluster_proto_depIdxs,
		EnumInfos:         file_protocol_cluster_proto_enumTypes,
		MessageInfos:      file_protocol_cluster_proto_msgTypes,
	}.Build()
	File_protocol_cluster_proto = out.File
	file_protocol_cluster_proto_goTypes = nil
	file_protocol_cluster_proto_depIdxs = nil
}
